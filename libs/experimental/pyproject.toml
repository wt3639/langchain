[build-system]
requires = [ "poetry-core>=1.0.0",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "langchain-experimental"
version = "0.0.62"
description = "Building applications with LLMs through composability"
authors = []
license = "MIT"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain"

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"
exclude = [ "notebooks", "examples", "example_data",]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
langchain-core = "^0.2.10"
langchain-community = "^0.2.6"

[tool.ruff.lint]
select = [ "E", "F", "I", "T201",]

[tool.coverage.run]
omit = [ "tests/*",]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [ "requires: mark tests as requiring a specific library", "asyncio: mark tests as requiring asyncio", "compile: mark placeholder test used to compile integration tests without running them",]
asyncio_mode = "auto"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.5"

[tool.poetry.group.typing.dependencies]
mypy = "^1.10"
types-pyyaml = "^6.0.12.2"
types-requests = "^2.28.11.5"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
setuptools = "^67.6.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
pytest-asyncio = "^0.20.3"
[[tool.poetry.group.test.dependencies.numpy]]
version = "^1.24.0"
python = "<3.12"

[[tool.poetry.group.test.dependencies.numpy]]
version = "^1.26.0"
python = ">=3.12"

[tool.poetry.group.typing.dependencies.langchain]
path = "../langchain"
develop = true

[tool.poetry.group.typing.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.typing.dependencies.langchain-community]
path = "../community"
develop = true

[tool.poetry.group.dev.dependencies.langchain]
path = "../langchain"
develop = true

[tool.poetry.group.dev.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.dev.dependencies.langchain-community]
path = "../community"
develop = true

[tool.poetry.group.test.dependencies.langchain]
path = "../langchain"
develop = true

[tool.poetry.group.test.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.test.dependencies.langchain-community]
path = "../community"
develop = true

[tool.poetry.group.test.dependencies.langchain-text-splitters]
path = "../text-splitters"
develop = true

[tool.poetry.group.test_integration.dependencies.langchain]
path = "../langchain"
develop = true

[tool.poetry.group.test_integration.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.test_integration.dependencies.langchain-community]
path = "../community"
develop = true

[tool.poetry.group.test_integration.dependencies.langchain-openai]
path = "../partners/openai"
develop = true
