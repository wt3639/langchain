[build-system]
requires = [ "poetry-core>=1.0.0",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "langchain"
version = "0.2.7"
description = "Building applications with LLMs through composability"
authors = []
license = "MIT"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain"

[tool.ruff]
exclude = [ "tests/integration_tests/examples/non-utf8-encoding.py",]

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"
exclude = [ "notebooks", "examples", "example_data",]

[tool.codespell]
skip = ".git,*.pdf,*.svg,*.pdf,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,package-lock.json,example_data,_dist,examples,*.trig"
ignore-regex = ".*(Stati Uniti|Tense=Pres).*"
ignore-words-list = "momento,collison,ned,foor,reworkd,parth,whats,aapply,mysogyny,unsecure,damon,crate,aadd,symbl,precesses,accademia,nin"

[tool.poetry.scripts]
langchain-server = "langchain.server:main"

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
langchain-core = "^0.2.12"
langchain-text-splitters = "^0.2.0"
langsmith = "^0.1.17"
pydantic = ">=1,<3"
SQLAlchemy = ">=1.4,<3"
requests = "^2"
PyYAML = ">=5.3"
aiohttp = "^3.8.3"
tenacity = "^8.1.0,!=8.4.0"
[[tool.poetry.dependencies.numpy]]
version = "^1"
python = "<3.12"

[[tool.poetry.dependencies.numpy]]
version = "^1.26.0"
python = ">=3.12"

[tool.ruff.lint]
select = [ "E", "F", "I", "T201",]

[tool.coverage.run]
omit = [ "tests/*",]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5 --snapshot-warn-unused -vv"
markers = [ "requires: mark tests as requiring a specific library", "scheduled: mark tests to run in scheduled testing", "compile: mark placeholder test used to compile integration tests without running them",]
asyncio_mode = "auto"

[tool.poetry.dependencies.async-timeout]
version = "^4.0.0"
python = "<3.11"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
pytest-dotenv = "^0.5.2"
duckdb-engine = "^0.9.2"
pytest-watcher = "^0.2.6"
freezegun = "^1.2.2"
responses = "^0.22.0"
pytest-asyncio = "^0.23.2"
lark = "^1.1.5"
pandas = "^2.0.0"
pytest-mock = "^3.10.0"
pytest-socket = "^0.6.0"
syrupy = "^4.0.2"
requests-mock = "^1.11.0"

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.0"

[tool.poetry.group.test_integration.dependencies]
pytest-vcr = "^1.0.2"
wrapt = "^1.15.0"
python-dotenv = "^1.0.0"
cassio = "^0.1.0"
langchainhub = "^0.1.16"

[tool.poetry.group.lint.dependencies]
ruff = "^0.5"

[tool.poetry.group.typing.dependencies]
mypy = "^1.10"
types-pyyaml = "^6.0.12.2"
types-requests = "^2.28.11.5"
types-toml = "^0.10.8.1"
types-redis = "^4.3.21.6"
types-pytz = "^2023.3.0.0"
types-chardet = "^5.0.4.6"
mypy-protobuf = "^3.0.0"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
playwright = "^1.28.0"
setuptools = "^67.6.1"

[tool.poetry.group.test.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.test.dependencies.langchain-text-splitters]
path = "../text-splitters"
develop = true

[tool.poetry.group.test.dependencies.langchain-openai]
path = "../partners/openai"
optional = true
develop = true

[tool.poetry.group.test_integration.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.test_integration.dependencies.langchain-text-splitters]
path = "../text-splitters"
develop = true

[tool.poetry.group.typing.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.typing.dependencies.langchain-text-splitters]
path = "../text-splitters"
develop = true

[tool.poetry.group.dev.dependencies.langchain-core]
path = "../core"
develop = true

[tool.poetry.group.dev.dependencies.langchain-text-splitters]
path = "../text-splitters"
develop = true
